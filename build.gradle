plugins {
    id 'io.codearte.nexus-staging' version '0.11.0'
    id 'org.springframework.boot' version '1.5.9.RELEASE'
}

apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'java'
apply plugin: 'wrapper'
apply plugin: 'signing'
apply plugin: 'maven'


description 'Spring Boot Google App Engine'
group 'com.threewks.spring'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

bootRepackage {
    enabled = false
}

// For depencies listed on this page use spring-defined versions (don't specify version)
// unless there is a good reason: https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-dependency-versions.html
dependencies {
    compile "com.google.appengine:appengine-api-1.0-sdk:${appengineVersion}"
    compile "com.googlecode.objectify:objectify:${objectifyVersion}"
    compile 'com.google.code.findbugs:jsr305:3.0.2'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'org.apache.commons:commons-text:1.1'
    compile 'com.google.guava:guava:23.0'

    compile 'javax.servlet:javax.servlet-api'
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.data:spring-data-commons'
    compile 'org.springframework:spring-tx'
    compile 'org.springframework.security:spring-security-core'
    compile 'org.springframework.security:spring-security-web'

    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    testCompile "com.google.appengine:appengine-testing:${appengineVersion}"
    testCompile "com.google.appengine:appengine-api-stubs:${appengineVersion}"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.security:spring-security-test'
    testCompile 'com.openpojo:openpojo:0.8.6'
}

if (project.hasProperty('release')) {
    signing {
        sign configurations.archives
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task testSourcesJar(type: Jar) {
        classifier = 'testSources'
        from sourceSets.test.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar, testSourcesJar
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUser, password: ossrhPassword)
                }

                pom.project {
                    name project.name
                    description project.description
                    packaging 'jar'
                    url 'https://github.com/3wks/spring-boot-gae'

                    scm {
                        connection 'https://github.com/3wks/spring-boot-gae.git'
                        developerConnection 'https://github.com/3wks/spring-boot-gae.git'
                        url 'https://github.com/3wks/spring-boot-gae.git'
                    }

                    licenses {
                        license {
                            name 'The MIT License (MIT)'
                            url 'http://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id = 'nicholas-armstrong'
                            name = 'Nicholas Armstrong'
                            email = 'nick@nicks-mail.com'
                        }
                        developer {
                            id = 'mbyrne00'
                            name = 'Matt Byrne'
                            email = 'matt@3wks.com.au'
                        }
                    }
                }
            }
        }
    }
}