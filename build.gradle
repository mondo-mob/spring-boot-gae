plugins {
    id 'org.springframework.boot' version '1.5.9.RELEASE'
    id 'com.jfrog.bintray' version '1.8.0'
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'wrapper'


description 'Spring Boot Google App Engine'
group 'com.threewks.spring'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}

wrapper {
    gradleVersion = '4.4.1'
}

bootRepackage {
    enabled = false
}

// For dependencies listed on this page use spring-defined versions (don't specify version)
// unless there is a good reason: https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-dependency-versions.html
dependencies {
    compile "com.google.appengine:appengine-api-1.0-sdk:${appengineVersion}"
    compile "com.googlecode.objectify:objectify:${objectifyVersion}"
    compile 'com.google.code.findbugs:jsr305:3.0.2'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'org.apache.commons:commons-text:1.1'
    compile 'com.google.guava:guava:23.0'

    compile 'javax.servlet:javax.servlet-api'
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.data:spring-data-commons'
    compile 'org.springframework:spring-tx'
    compile 'org.springframework.security:spring-security-core'
    compile 'org.springframework.security:spring-security-web'

    compile('com.google.api-client:google-api-client-appengine:1.23.0') {
        exclude group: 'com.google.guava', module: 'guava-jdk5'
    }
    compile('com.google.api-client:google-api-client-jackson2:1.23.0') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    compile "com.google.cloud:google-cloud-storage:1.26.0"

    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'

    testCompile "com.google.appengine:appengine-testing:${appengineVersion}"
    testCompile "com.google.appengine:appengine-api-stubs:${appengineVersion}"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework:spring-webmvc'
    testCompile 'org.springframework.security:spring-security-config'
    testCompile 'org.springframework.security:spring-security-test'
    testCompile 'com.openpojo:openpojo:0.8.6'
}



def pomConfig = {
    scm {
        connection 'https://github.com/3wks/spring-boot-gae.git'
        developerConnection 'https://github.com/3wks/spring-boot-gae.git'
        url 'https://github.com/3wks/spring-boot-gae.git'
    }

    licenses {
        license {
            name 'The MIT License (MIT)'
            url 'http://opensource.org/licenses/MIT'
            distribution 'repo'
        }
    }

    developers {
        developer {
            id 'nicholas-armstrong'
            name 'Nicholas Armstrong'
            email 'nick@nicks-mail.com'
        }
        developer {
            id 'mbyrne00'
            name 'Matt Byrne'
            email 'matt@3wks.com.au'
        }
        developer {
            id 'kuhnza'
            name 'Dave Kuhn'
            email 'dave@3wks.com.au'
        }
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task testSourcesJar(type: Jar) {
    classifier = 'testSources'
    from sourceSets.test.allSource
}

artifacts {
    archives javadocJar, sourcesJar, testSourcesJar
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier 'sources'
            }
            artifact javadocJar {
                classifier 'javadoc'
            }
            groupId project.group
            artifactId project.name
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('name', project.name)
                root.appendNode('description', project.description)
                root.appendNode('url', 'https://github.com/3wks/spring-boot-gae')
                root.appendNode('packaging', 'jar')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['mavenPublication']
    publish = true

    pkg {
        repo = project.name
        name = project.name
        desc = project.description
        repo = 'spring-google-appengine'
        userOrg = '3wks'
        licenses = ['MIT']
        labels = ['spring', 'spring-boot', 'google', 'appengine', 'gae', 'gcp']
        vcsUrl = 'https://github.com/3wks/spring-boot-gae.git'
        version {
            name = project.version
            desc = "${project.name} ${project.version}"
            released = new Date()
            gpg {
                sign = true
                passphrase = System.getProperty('signing.passphrase')
            }
            mavenCentralSync {
                sync = true
                user = System.getProperty('oss.user')
                password = System.getProperty('oss.password')
                close = '1'
            }
        }
    }
}
